/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DepartmentReport as PrismaDepartmentReport,
} from "@prisma/client";

export class DepartmentReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DepartmentReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.departmentReport.count(args);
  }

  async departmentReports<T extends Prisma.DepartmentReportFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DepartmentReportFindManyArgs>
  ): Promise<PrismaDepartmentReport[]> {
    return this.prisma.departmentReport.findMany<Prisma.DepartmentReportFindManyArgs>(
      args
    );
  }
  async departmentReport<T extends Prisma.DepartmentReportFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DepartmentReportFindUniqueArgs>
  ): Promise<PrismaDepartmentReport | null> {
    return this.prisma.departmentReport.findUnique(args);
  }
  async createDepartmentReport<T extends Prisma.DepartmentReportCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DepartmentReportCreateArgs>
  ): Promise<PrismaDepartmentReport> {
    return this.prisma.departmentReport.create<T>(args);
  }
  async updateDepartmentReport<T extends Prisma.DepartmentReportUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DepartmentReportUpdateArgs>
  ): Promise<PrismaDepartmentReport> {
    return this.prisma.departmentReport.update<T>(args);
  }
  async deleteDepartmentReport<T extends Prisma.DepartmentReportDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DepartmentReportDeleteArgs>
  ): Promise<PrismaDepartmentReport> {
    return this.prisma.departmentReport.delete(args);
  }
}
