/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DiscountReport as PrismaDiscountReport } from "@prisma/client";

export class DiscountReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DiscountReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.discountReport.count(args);
  }

  async discountReports<T extends Prisma.DiscountReportFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountReportFindManyArgs>
  ): Promise<PrismaDiscountReport[]> {
    return this.prisma.discountReport.findMany<Prisma.DiscountReportFindManyArgs>(
      args
    );
  }
  async discountReport<T extends Prisma.DiscountReportFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountReportFindUniqueArgs>
  ): Promise<PrismaDiscountReport | null> {
    return this.prisma.discountReport.findUnique(args);
  }
  async createDiscountReport<T extends Prisma.DiscountReportCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountReportCreateArgs>
  ): Promise<PrismaDiscountReport> {
    return this.prisma.discountReport.create<T>(args);
  }
  async updateDiscountReport<T extends Prisma.DiscountReportUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountReportUpdateArgs>
  ): Promise<PrismaDiscountReport> {
    return this.prisma.discountReport.update<T>(args);
  }
  async deleteDiscountReport<T extends Prisma.DiscountReportDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DiscountReportDeleteArgs>
  ): Promise<PrismaDiscountReport> {
    return this.prisma.discountReport.delete(args);
  }
}
