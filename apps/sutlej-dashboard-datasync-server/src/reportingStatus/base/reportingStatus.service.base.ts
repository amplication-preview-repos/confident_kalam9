/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ReportingStatus as PrismaReportingStatus,
} from "@prisma/client";

export class ReportingStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReportingStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reportingStatus.count(args);
  }

  async reportingStatuses<T extends Prisma.ReportingStatusFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReportingStatusFindManyArgs>
  ): Promise<PrismaReportingStatus[]> {
    return this.prisma.reportingStatus.findMany<Prisma.ReportingStatusFindManyArgs>(
      args
    );
  }
  async reportingStatus<T extends Prisma.ReportingStatusFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReportingStatusFindUniqueArgs>
  ): Promise<PrismaReportingStatus | null> {
    return this.prisma.reportingStatus.findUnique(args);
  }
  async createReportingStatus<T extends Prisma.ReportingStatusCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReportingStatusCreateArgs>
  ): Promise<PrismaReportingStatus> {
    return this.prisma.reportingStatus.create<T>(args);
  }
  async updateReportingStatus<T extends Prisma.ReportingStatusUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReportingStatusUpdateArgs>
  ): Promise<PrismaReportingStatus> {
    return this.prisma.reportingStatus.update<T>(args);
  }
  async deleteReportingStatus<T extends Prisma.ReportingStatusDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ReportingStatusDeleteArgs>
  ): Promise<PrismaReportingStatus> {
    return this.prisma.reportingStatus.delete(args);
  }
}
